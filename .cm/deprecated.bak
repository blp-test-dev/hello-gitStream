# -*- mode: yaml -*-
manifest:
  version: 1.0

automations:
  {% for item in deprecated %}
  # Automation names must be unique, so this adds an iterator index to each instance
  catch_deprecated_components_{{ loop.index }}:
    # Triggered when any of the modified files use a deprecated component
    if:
      - {{ source.diff.files | matchDiffLines(regex=item.regex) | some }}
    # Apply a deprecated-component label, request changes, and post a comment with an explanation.
    run:
      - action: add-label@v1
        args:
          label: 'deprecated-component'
          color: '#FF0000'
      - action: request-changes@v1
        args:
          comment: |
            `{{ item.old }}` component is deprecated, use `{{ item.new }}` instead
  {% endfor %}

  # These are the deprecated files that are evaluated in catch_deprecated_components
deprecated:
  - regex: r/insecureAuth/
    old: insecureAuth
    new: secureAuth
  - regex: r/anotherOldAPI/
    old: anotherOldAPI
    new: anotherNewAPI